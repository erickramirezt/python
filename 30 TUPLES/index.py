# PYTHON TUPLES
mytuple = ("apple", "banana", "cherry")

# TUPLE
# TUPLES ARE USED TO STORE MULTIPLE ITEMS IN A SINGLE VARIABLE.
# TUPLE IS ONE OF 4 BUILT-IN DATA TYPES IN PYTHON USED TO STORE COLLECTIONS OF DATA, THE OTHER 3 ARE LIST, SET,
# AND DICTIONARY, ALL WITH DIFFERENT QUALITIES AND USAGE.
# A TUPLE IS A COLLECTION WHICH IS ORDERED AND UNCHANGEABLE.
# TUPLES ARE WRITTEN WITH ROUND BRACKETS.
# CREATE A TUPLE:
thistuple = ("apple", "banana", "cherry")
print(thistuple)  # OUTPUT: ('apple', 'banana', 'cherry')

# TUPLE ITEMS
# TUPLE ITEMS ARE ORDERED, UNCHANGEABLE, AND ALLOW DUPLICATE VALUES.
# TUPLE ITEMS ARE INDEXED, THE FIRST ITEM HAS INDEX [0], THE SECOND ITEM HAS INDEX [1] ETC.

# ORDERED
# WHEN WE SAY THAT TUPLES ARE ORDERED, IT MEANS THAT THE ITEMS HAVE A DEFINED ORDER, AND THAT ORDER WILL NOT
# CHANGE.

# UNCHANGEABLE
# TUPLES ARE UNCHANGEABLE, MEANING THAT WE CANNOT CHANGE, ADD OR REMOVE ITEMS AFTER THE TUPLE HAS BEEN CREATED.

# ALLOW DUPLICATES
# SINCE TUPLES ARE INDEXED, THEY CAN HAVE ITEMS WITH THE SAME VALUE:
# TUPLE WITH DUPLICATE VALUES:
thistuple = ("apple", "banana", "cherry", "apple", "cherry")
print(thistuple)  # OUTPUT: ('apple', 'banana', 'cherry', 'apple', 'cherry')

# TUPLE LENGTH
# TO DETERMINE HOW MANY ITEMS A TUPLE HAS, USE THE LEN() METHOD:
# PRINT THE NUMBER OF ITEMS IN THE TUPLE:
thistuple = ("apple", "banana", "cherry")
print(len(thistuple))  # OUTPUT: 3

# CREATE TUPLE WITH ONE ITEM
# TO CREATE A TUPLE WITH ONLY ONE ITEM, YOU HAVE TO ADD A COMMA AFTER THE ITEM, OTHERWISE PYTHON WILL NOT
# RECOGNIZE IT AS A TUPLE.
# ONE ITEM TUPLE, REMEMBER THE COMMA:
thistuple = ("apple",)
print(type(thistuple))  # OUTPUT: <class 'tuple'>

# NOT A TUPLE
thistuple = ("apple")
print(type(thistuple))  # OUTPUT: <class 'str'>

# TUPLE ITEMS - DATA TYPES
# TUPLE ITEMS CAN BE OF ANY DATA TYPE:
# STRING, INT AND BOOLEAN DATA TYPES:
tuple1 = ("apple", "banana", "cherry")
tuple2 = (1, 5, 7, 9, 3)
tuple3 = (True, False, False)

# A TUPLE CAN CONTAIN DIFFERENT DATA TYPES:
# A TUPLE WITH STRINGS, INTEGERS AND BOOLEAN VALUES:
tuple1 = ("abc", 34, True, 40, "male")

# TYPE
# FROM PYTHON'S PERSPECTIVE, TUPLES ARE DEFINED AS OBJECTS WITH THE DATA TYPE 'TUPLE':
# <class 'tuple'>
# WHAT IS THE DATA TYPE OF A TUPLE?
mytuple = ("apple", "banana", "cherry")
print(type(mytuple))  # OUTPUT: <class 'tuple'>

# THE TUPLE() CONSTRUCTOR
# IT IS ALSO POSSIBLE TO USE THE TUPLE() CONSTRUCTOR TO MAKE A TUPLE.
# USING THE TUPLE() METHOD TO MAKE A TUPLE:
thistuple = tuple(("apple", "banana", "cherry"))  # NOTE THE DOUBLE ROUND-BRACKETS
print(thistuple)  # OUTPUT: ('apple', 'banana', 'cherry')

# PYTHON COLLECTIONS (ARRAYS)
# THERE ARE FOUR COLLECTION DATA TYPES IN THE PYTHON PROGRAMMING LANGUAGE:
# LIST IS A COLLECTION WHICH IS ORDERED AND CHANGEABLE. ALLOWS DUPLICATE MEMBERS.
# TUPLE IS A COLLECTION WHICH IS ORDERED AND UNCHANGEABLE. ALLOWS DUPLICATE MEMBERS.
# SET IS A COLLECTION WHICH IS UNORDERED AND UNINDEXED. NO DUPLICATE MEMBERS.
# DICTIONARY IS A COLLECTION WHICH IS UNORDERED, CHANGEABLE AND INDEXED. NO DUPLICATE MEMBERS.