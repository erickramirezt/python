# PYTHON DICTIONARIES
thisdict = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}

# DICTIONARY
# DICTIONARIES ARE USED TO STORE DATA VALUES IN KEY:VALUE PAIRS
# A DICTIONARY IS A COLLECTION WHICH IS ORDERED*, CHANGEABLE AND DOES NOT ALLOW DUPLICATES

# DICTIONARIES ARE WRITTEN WITH CURLY BRACKETS, AND HAVE KEYS AND VALUES
# EXAMPLE
# CREATE AND PRINT A DICTIONARY
thisdict = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}
print(thisdict)

# DICTIONARY ITEMS
# DICTIONARY ITEMS ARE ORDERED, CHANGEABLE, AND DOES NOT ALLOW DUPLICATES
# DICTIONARY ITEMS ARE PRESENTED IN KEY:VALUE PAIRS, AND CAN BE REFERRED TO BY USING THE
# KEY NAME
# EXAMPLE
# PRINT THE "brand" VALUE OF THE DICTIONARY
thisdict = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964
}
print(thisdict["brand"])

# ORDERED OR UNORDERED?
# WHEN WE SAY THAT DICTIONARY ITEMS ARE ORDERED, IT MEANS THAT THE ITEMS HAVE A DEFINED
# ORDER, AND THAT ORDER WILL NOT CHANGE
# UNORDERED MEANS THAT THE ITEMS DOES NOT HAVE A DEFINED ORDER, YOU CANNOT REFER TO AN
# ITEM BY USING AN INDEX

# CHANGEABLE
# DICTIONARIES ARE CHANGEABLE, MEANING THAT WE CAN CHANGE, ADD OR REMOVE ITEMS AFTER THE
# DICTIONARY HAS BEEN CREATED

# DUPLICATES NOT ALLOWED
# DICTIONARIES CANNOT HAVE TWO ITEMS WITH THE SAME KEY
# EXAMPLE
# DUPLICATE VALUES WILL OVERWRITE EXISTING VALUES
thisdict = {
    "brand": "Ford",
    "model": "Mustang",
    "year": 1964,
    "year": 2020
}
print(thisdict)

# DICTIONARY LENGTH
# TO DETERMINE HOW MANY ITEMS A DICTIONARY HAS, USE THE len() FUNCTION
# EXAMPLE
# PRINT THE NUMBER OF ITEMS IN THE DICTIONARY
print(len(thisdict))

# DICTIONARY ITEMS - DATA TYPES
# THE VALUES IN DICTIONARY ITEMS CAN BE OF ANY DATA TYPE
# EXAMPLE
# STRING, INT, BOOLEAN, AND LIST DATA TYPES
thisdict = {
    "brand": "Ford",
    "electric": False,
    "year": 1964,
    "colors": ["red", "white", "blue"]
}

# TYPE()
# FROM PYTHON'S PERSPECTIVE, DICTIONARIES ARE DEFINED AS OBJECTS WITH THE DATA TYPE 'dict'
# <class 'dict'>
# EXAMPLE
# PRINT THE DATA TYPE OF A DICTIONARY
print(type(thisdict))

# THE dict() CONSTRUCTOR
# IT IS ALSO POSSIBLE TO USE THE dict() CONSTRUCTOR TO MAKE A NEW DICTIONARY
# EXAMPLE
# USING THE dict() CONSTRUCTOR TO MAKE A DICTIONARY
thisdict = dict(brand="Ford", model="Mustang", year=1964)
print(thisdict)