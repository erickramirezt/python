# PYTHON ARRAYS

# NOTE: PYTHON DOES NOT HAVE BUILT-IN SUPPORT FOR ARRAYS, BUT PYTHON LISTS CAN BE USED
# INSTEAD.

# ARRAYS
# ARRAYS ARE USED TO STORE MULTIPLE VALUES IN ONE SINGLE VARIABLE:

# EXAMPLE
# CREATE AN ARRAY CONTAINING CAR NAMES:
cars = ["Ford", "Volvo", "BMW"]

# WHAT IS AN ARRAY?
# AN ARRAY IS A SPECIAL VARIABLE, WHICH CAN HOLD MORE THAN ONE VALUE AT A TIME.
# IF YOU HAVE A LIST OF ITEMS (A LIST OF CAR NAMES, FOR EXAMPLE), STORING THE CARS IN
# SINGLE VARIABLES COULD LOOK LIKE THIS:
car1 = "Ford"
car2 = "Volvo"
car3 = "BMW"
# HOWEVER, WHAT IF YOU WANT TO LOOP THROUGH THE CARS AND FIND A SPECIFIC ONE? AND WHAT IF
# YOU HAD NOT 3 CARS, BUT 300?
# THE SOLUTION IS AN ARRAY!
# AN ARRAY CAN HOLD MANY VALUES UNDER A SINGLE NAME, AND YOU CAN ACCESS THE VALUES BY
# REFERRING TO AN INDEX NUMBER.

# ACCESS THE ELEMENTS OF AN ARRAY
# YOU REFER TO AN ARRAY ELEMENT BY REFERRING TO THE INDEX NUMBER.

# EXAMPLE
# GET THE VALUE OF THE FIRST ARRAY ITEM:
x = cars[0]

# MODIFY THE VALUE OF THE FIRST ARRAY ITEM:
cars[0] = "Toyota"

# THE LENGTH OF AN ARRAY
# USE THE len() METHOD TO RETURN THE LENGTH OF AN ARRAY (THE NUMBER OF ELEMENTS IN AN ARRAY).

# EXAMPLE
# RETURN THE NUMBER OF ELEMENTS IN THE CARS ARRAY:
x = len(cars)

# NOTE: THE LENGTH OF AN ARRAY IS ALWAYS ONE MORE THAN THE HIGHEST ARRAY INDEX.

# LOOPING ARRAY ELEMENTS
# YOU CAN USE THE FOR IN LOOP TO LOOP THROUGH ALL THE ELEMENTS OF AN ARRAY.

# EXAMPLE
# PRINT EACH ITEM IN THE CARS ARRAY:
for x in cars:
    print(x)

# ADDING ARRAY ELEMENTS
# YOU CAN USE THE APPEND() METHOD TO ADD AN ELEMENT TO AN ARRAY.

# EXAMPLE
# ADD ONE MORE ELEMENT TO THE CARS ARRAY:
cars.append("Honda")

# REMOVING ARRAY ELEMENTS
# YOU CAN USE THE pop() METHOD TO REMOVE AN ELEMENT FROM THE ARRAY.

# EXAMPLE
# DELETE THE SECOND ELEMENT OF THE CARS ARRAY:
cars.pop(1)

# YOU CAN ALSO USE THE remove() METHOD TO REMOVE AN ELEMENT FROM THE ARRAY.

# EXAMPLE
# DELETE THE ELEMENT THAT HAS THE VALUE "Volvo":
cars.remove("Volvo")

# NOTE: THE LIST'S remove() METHOD ONLY REMOVES THE FIRST OCCURRENCE OF THE SPECIFIED VALUE.

# ARRAY METHODS
# PYTHON HAS A SET OF BUILT-IN METHODS THAT YOU CAN USE ON LISTS/ARRAYS.
# METHOD	DESCRIPTION
# append()	Adds an element at the end of the list
# clear()	Removes all the elements from the list
# copy()	Returns a copy of the list
# count()	Returns the number of elements with the specified value
# extend()	Add the elements of a list (or any iterable), to the end of the current list
# index()	Returns the index of the first element with the specified value
# insert()	Adds an element at the specified position
# pop()	    Removes the element at the specified position
# remove()	Removes the item with the specified value
# reverse()	Reverses the order of the list
# sort()	Sorts the list

# NOTE: PYTHON DOES NOT HAVE BUILT-IN SUPPORT FOR ARRAYS, BUT PYTHON LISTS CAN BE USED 
# INSTEAD.