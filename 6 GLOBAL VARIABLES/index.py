# PYTHON - GLOBAL VARIABLES

# GLOBAL VARIABLES
# VARIABLES THAT ARE CREATED OUTSIDE OF A FUNCTION (AS IN ALL OF THE EXAMPLES ABOVE) ARE KNOWN AS GLOBAL VARIABLES.
# GLOBAL VARIABLES CAN BE USED BY EVERYONE, BOTH INSIDE OF FUNCTIONS AND OUTSIDE.
# EXAMPLE
# CREATE A VARIABLE OUTSIDE OF A FUNCTION, AND USE IT INSIDE THE FUNCTION
x = "awesome"
def myfunc():
  print("Python is " + x)

myfunc()

""" IF YOU CREATE A VARIABLE WITH THE SAME NAME INSIDE A FUNCTION, THIS VARIABLE WILL BE LOCAL, AND CAN ONLY BE USED 
INSIDE THE FUNCTION. THE GLOBAL VARIABLE WITH THE SAME NAME WILL REMAIN AS IT WAS, GLOBAL AND WITH THE ORIGINAL 
VALUE. """
# EXAMPLE
# CREATE A VARIABLE INSIDE A FUNCTION, WITH THE SAME NAME AS THE GLOBAL VARIABLE
x = "awesome"
def myfunc():
  x = "fantastic"
  print("Python is " + x)

myfunc()

print("Python is " + x)

# THE GLOBAL KEYWORD
""" NORMALLY, WHEN YOU CREATE A VARIABLE INSIDE A FUNCTION, THAT VARIABLE IS LOCAL, AND CAN ONLY BE USED INSIDE THAT 
FUNCTION """
# TO CREATE A GLOBAL VARIABLE INSIDE A FUNCTION, YOU CAN USE THE GLOBAL KEYWORD.
# EXAMPLE
# IF YOU USE THE GLOBAL KEYWORD, THE VARIABLE BELONGS TO THE GLOBAL SCOPE:
def myfunc():
  global x
  x = "fantastic"

myfunc()

print("Python is " + x)
# ALSO USE THE GLOBAL KEYWORD IF YOU WANT TO CHANGE A GLOBAL VARIABLE INSIDE A FUNCTION.

# EXAMPLE
# TO CHANGE THE VALUE OF A GLOBAL VARIABLE INSIDE A FUNCTION, REFER TO THE VARIABLE BY USING THE GLOBAL KEYWORD:
x = "awesome"

def myfunc():
    global x
    x = "fantastic"

myfunc()

print("Python is " + x)