# PYTHON FILE OPEN

# OPEN A FILE ON THE SERVER
# TO OPEN THE FILE, USE THE BUILT-IN OPEN() FUNCTION.
# THE OPEN() FUNCTION RETURNS A FILE OBJECT, WHICH HAS A READ() METHOD FOR READING THE 
# CONTENT OF THE FILE:

# EXAMPLE
try:
    f = open("demofile.txt", "r")
    print(f.read())
except:
    print("Something went wrong when trying to read the file")

# IF THE FILE IS LOCATED IN A DIFFERENT LOCATION, YOU WILL HAVE TO SPECIFY THE FILE PATH,
# LIKE THIS:

# EXAMPLE
# OPEN A FILE ON A DIFFERENT LOCATION
f = open("D:\\myfiles\welcome.txt", "r")
print(f.read())

# READ ONLY PARTS OF THE FILE
# BY DEFAULT THE READ() METHOD RETURNS THE WHOLE TEXT, BUT YOU CAN ALSO SPECIFY HOW MANY
# CHARACTERS YOU WANT TO RETURN:

# EXAMPLE
# RETURN THE 5 FIRST CHARACTERS OF THE FILE:
f = open("demofile.txt", "r")
print(f.read(5))

# READ LINES
# YOU CAN RETURN ONE LINE BY USING THE READLINE() METHOD:

# EXAMPLE
# READ ONE LINE OF THE FILE:
f = open("demofile.txt", "r")
print(f.readline())

# BY CALLING READLINE() TWO TIMES, YOU CAN READ THE TWO FIRST LINES:

# EXAMPLE
# READ TWO LINES OF THE FILE:
f = open("demofile.txt", "r")
print(f.readline())
print(f.readline())

# BY LOOPING THROUGH THE LINES OF THE FILE, YOU CAN READ THE WHOLE FILE, LINE BY LINE:

# EXAMPLE
# LOOP THROUGH THE FILE LINE BY LINE:
f = open("demofile.txt", "r")
for x in f:
    print(x)

# CLOSE FILES
# IT IS A GOOD PRACTICE TO ALWAYS CLOSE THE FILE WHEN YOU ARE DONE WITH IT.

# EXAMPLE
# CLOSE THE FILE WHEN YOU ARE FINISHED WITH IT:
f = open("demofile.txt", "r")
print(f.readline())
f.close()

# NOTE: YOU SHOULD ALWAYS CLOSE YOUR FILES, IN SOME CASES, DUE TO BUFFERING, CHANGES MADE
# TO A FILE MAY NOT SHOW UNTIL YOU CLOSE THE FILE.